{
  "contractName": "ERC721Full",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x01ffc9a7"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x06fdde03"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x081812fc"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x095ea7b3"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x18160ddd"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x23b872dd"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x2f745c59"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x42842e0e"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x4f6ccce7"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x6352211e"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "steward",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x637eea19"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x70a08231"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x95d89b41"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xa22cb465"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xb88d4fde"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xc87b56dd"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xe985e9c5"
    },
    {
      "inputs": [
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "symbol",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor",
      "signature": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event",
      "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event",
      "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event",
      "signature": "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "setup",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xba0bba40"
    }
  ],
  "bytecode": "0x60806040526000600160006101000a81548160ff0219169083151502179055503480156200002c57600080fd5b506040516200220a3803806200220a833981018060405260408110156200005257600080fd5b8101908080516401000000008111156200006b57600080fd5b828101905060208101848111156200008257600080fd5b8151856001820283011164010000000082111715620000a057600080fd5b50509291906020018051640100000000811115620000bd57600080fd5b82810190506020810184811115620000d457600080fd5b8151856001820283011164010000000082111715620000f257600080fd5b50509291905050508181620001396301ffc9a77c0100000000000000000000000000000000000000000000000000000000026200022c640100000000026401000000009004565b620001766380ac58cd7c0100000000000000000000000000000000000000000000000000000000026200022c640100000000026401000000009004565b620001b363780e9d637c0100000000000000000000000000000000000000000000000000000000026200022c640100000000026401000000009004565b81600b9080519060200190620001cb929190620002ea565b5080600c9080519060200190620001e4929190620002ea565b5062000222635b5e139f7c0100000000000000000000000000000000000000000000000000000000026200022c640100000000026401000000009004565b5050505062000399565b63ffffffff7c010000000000000000000000000000000000000000000000000000000002817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141515156200027e57600080fd5b6001600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200032d57805160ff19168380011785556200035e565b828001600101855582156200035e579182015b828111156200035d57825182559160200191906001019062000340565b5b5090506200036d919062000371565b5090565b6200039691905b808211156200039257600081600090555060010162000378565b5090565b90565b611e6180620003a96000396000f3fe6080604052600436106100fc576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806301ffc9a71461010157806306fdde0314610173578063081812fc14610203578063095ea7b31461027e57806318160ddd146102d957806323b872dd146103045780632f745c591461037f57806342842e0e146103ee5780634f6ccce7146104695780636352211e146104b8578063637eea191461053357806370a082311461058a57806395d89b41146105ef578063a22cb4651461067f578063b88d4fde146106dc578063ba0bba40146107ee578063c87b56dd14610805578063e985e9c5146108b9575b600080fd5b34801561010d57600080fd5b506101596004803603602081101561012457600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610942565b604051808215151515815260200191505060405180910390f35b34801561017f57600080fd5b506101886109a9565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101c85780820151818401526020810190506101ad565b50505050905090810190601f1680156101f55780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561020f57600080fd5b5061023c6004803603602081101561022657600080fd5b8101908080359060200190929190505050610a4b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561028a57600080fd5b506102d7600480360360408110156102a157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a9c565b005b3480156102e557600080fd5b506102ee610be1565b6040518082815260200191505060405180910390f35b34801561031057600080fd5b5061037d6004803603606081101561032757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610bee565b005b34801561038b57600080fd5b506103d8600480360360408110156103a257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c13565b6040518082815260200191505060405180910390f35b3480156103fa57600080fd5b506104676004803603606081101561041157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c8a565b005b34801561047557600080fd5b506104a26004803603602081101561048c57600080fd5b8101908080359060200190929190505050610cab565b6040518082815260200191505060405180910390f35b3480156104c457600080fd5b506104f1600480360360208110156104db57600080fd5b8101908080359060200190929190505050610ce3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561053f57600080fd5b50610548610d61565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561059657600080fd5b506105d9600480360360208110156105ad57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d87565b6040518082815260200191505060405180910390f35b3480156105fb57600080fd5b50610604610e12565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610644578082015181840152602081019050610629565b50505050905090810190601f1680156106715780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561068b57600080fd5b506106da600480360360408110156106a257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050610eb4565b005b3480156106e857600080fd5b506107ec600480360360808110156106ff57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019064010000000081111561076657600080fd5b82018360208201111561077857600080fd5b8035906020019184600183028401116401000000008311171561079a57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610ff0565b005b3480156107fa57600080fd5b50610803611018565b005b34801561081157600080fd5b5061083e6004803603602081101561082857600080fd5b810190808035906020019092919050505061118e565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561087e578082015181840152602081019050610863565b50505050905090810190601f1680156108ab5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156108c557600080fd5b50610928600480360360408110156108dc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611257565b604051808215151515815260200191505060405180910390f35b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b6060600b8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a415780601f10610a1657610100808354040283529160200191610a41565b820191906000526020600020905b815481529060010190602001808311610a2457829003601f168201915b5050505050905090565b6000610a56826112eb565b1515610a6157600080fd5b6003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610aa782610ce3565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610ae457600080fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610b245750610b238133611257565b5b1515610b2f57600080fd5b826003600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6000600980549050905090565b610bf8338261135d565b1515610c0357600080fd5b610c0e8383836113b8565b505050565b6000610c1e83610d87565b82101515610c2b57600080fd5b600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481101515610c7757fe5b9060005260206000200154905092915050565b610ca68383836020604051908101604052806000815250610ff0565b505050565b6000610cb5610be1565b82101515610cc257600080fd5b600982815481101515610cd157fe5b90600052602060002001549050919050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610d5857600080fd5b80915050919050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610dc457600080fd5b610e0b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206113dc565b9050919050565b6060600c8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610eaa5780601f10610e7f57610100808354040283529160200191610eaa565b820191906000526020600020905b815481529060010190602001808311610e8d57829003601f168201915b5050505050905090565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610eef57600080fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b610ffb848484610bee565b611007848484846113ea565b151561101257600080fd5b50505050565b600160009054906101000a900460ff1615151561109d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f416c726561647920696e697469616c697a65640000000000000000000000000081525060200191505060405180910390fd5b60018060006101000a81548160ff02191690831515021790555033600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611125600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16602a61160d565b61118c602a606060405190810160405280602e81526020017f68747470733a2f2f74686973617274776f726b6973616c776179736f6e73616c81526020017f652e636f6d2f6d6574616461746100000000000000000000000000000000000081525061162e565b565b6060611199826112eb565b15156111a457600080fd5b600d60008381526020019081526020016000208054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561124b5780601f106112205761010080835404028352916020019161124b565b820191906000526020600020905b81548152906001019060200180831161122e57829003601f168201915b50505050509050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614905092915050565b6113c383838361166e565b6113cd8382611835565b6113d782826119d9565b505050565b600081600001549050919050565b600061140b8473ffffffffffffffffffffffffffffffffffffffff16611aa0565b151561141a5760019050611605565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156115115780820151818401526020810190506114f6565b50505050905090810190601f16801561153e5780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b15801561156057600080fd5b505af1158015611574573d6000803e3d6000fd5b505050506040513d602081101561158a57600080fd5b8101908080519060200190929190505050905063150b7a027c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b6116178282611ab3565b61162182826119d9565b61162a81611bfd565b5050565b611637826112eb565b151561164257600080fd5b80600d60008481526020019081526020016000209080519060200190611669929190611d64565b505050565b8273ffffffffffffffffffffffffffffffffffffffff1661168e82610ce3565b73ffffffffffffffffffffffffffffffffffffffff161415156116b057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156116ec57600080fd5b6116f581611c49565b61173c600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611d09565b611783600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611d2c565b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b600061188d6001600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050611d4290919063ffffffff16565b90506000600860008481526020019081526020016000205490508181141515611980576000600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811015156118fe57fe5b9060005260206000200154905080600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110151561195857fe5b9060005260206000200181905550816008600083815260200190815260200160002081905550505b600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054809190600190036119d29190611de4565b5050505050565b600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506008600083815260200190815260200160002081905550600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b600080823b905060008111915050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515611aef57600080fd5b611af8816112eb565b151515611b0457600080fd5b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611b9d600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611d2c565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b600980549050600a600083815260200190815260200160002081905550600981908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b600073ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515611d065760006003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b611d2160018260000154611d4290919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b6000828211151515611d5357600080fd5b600082840390508091505092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611da557805160ff1916838001178555611dd3565b82800160010185558215611dd3579182015b82811115611dd2578251825591602001919060010190611db7565b5b509050611de09190611e10565b5090565b815481835581811115611e0b57818360005260206000209182019101611e0a9190611e10565b5b505050565b611e3291905b80821115611e2e576000816000905550600101611e16565b5090565b9056fea165627a7a72305820165532b37869337c227090ed9621d3d810862e1b35e200b4fa1025c500b297ff0029",
  "deployedBytecode": "0x6080604052600436106100fc576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806301ffc9a71461010157806306fdde0314610173578063081812fc14610203578063095ea7b31461027e57806318160ddd146102d957806323b872dd146103045780632f745c591461037f57806342842e0e146103ee5780634f6ccce7146104695780636352211e146104b8578063637eea191461053357806370a082311461058a57806395d89b41146105ef578063a22cb4651461067f578063b88d4fde146106dc578063ba0bba40146107ee578063c87b56dd14610805578063e985e9c5146108b9575b600080fd5b34801561010d57600080fd5b506101596004803603602081101561012457600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610942565b604051808215151515815260200191505060405180910390f35b34801561017f57600080fd5b506101886109a9565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101c85780820151818401526020810190506101ad565b50505050905090810190601f1680156101f55780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561020f57600080fd5b5061023c6004803603602081101561022657600080fd5b8101908080359060200190929190505050610a4b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561028a57600080fd5b506102d7600480360360408110156102a157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a9c565b005b3480156102e557600080fd5b506102ee610be1565b6040518082815260200191505060405180910390f35b34801561031057600080fd5b5061037d6004803603606081101561032757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610bee565b005b34801561038b57600080fd5b506103d8600480360360408110156103a257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c13565b6040518082815260200191505060405180910390f35b3480156103fa57600080fd5b506104676004803603606081101561041157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c8a565b005b34801561047557600080fd5b506104a26004803603602081101561048c57600080fd5b8101908080359060200190929190505050610cab565b6040518082815260200191505060405180910390f35b3480156104c457600080fd5b506104f1600480360360208110156104db57600080fd5b8101908080359060200190929190505050610ce3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561053f57600080fd5b50610548610d61565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561059657600080fd5b506105d9600480360360208110156105ad57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d87565b6040518082815260200191505060405180910390f35b3480156105fb57600080fd5b50610604610e12565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610644578082015181840152602081019050610629565b50505050905090810190601f1680156106715780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561068b57600080fd5b506106da600480360360408110156106a257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050610eb4565b005b3480156106e857600080fd5b506107ec600480360360808110156106ff57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019064010000000081111561076657600080fd5b82018360208201111561077857600080fd5b8035906020019184600183028401116401000000008311171561079a57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610ff0565b005b3480156107fa57600080fd5b50610803611018565b005b34801561081157600080fd5b5061083e6004803603602081101561082857600080fd5b810190808035906020019092919050505061118e565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561087e578082015181840152602081019050610863565b50505050905090810190601f1680156108ab5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156108c557600080fd5b50610928600480360360408110156108dc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611257565b604051808215151515815260200191505060405180910390f35b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b6060600b8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a415780601f10610a1657610100808354040283529160200191610a41565b820191906000526020600020905b815481529060010190602001808311610a2457829003601f168201915b5050505050905090565b6000610a56826112eb565b1515610a6157600080fd5b6003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610aa782610ce3565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610ae457600080fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610b245750610b238133611257565b5b1515610b2f57600080fd5b826003600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6000600980549050905090565b610bf8338261135d565b1515610c0357600080fd5b610c0e8383836113b8565b505050565b6000610c1e83610d87565b82101515610c2b57600080fd5b600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481101515610c7757fe5b9060005260206000200154905092915050565b610ca68383836020604051908101604052806000815250610ff0565b505050565b6000610cb5610be1565b82101515610cc257600080fd5b600982815481101515610cd157fe5b90600052602060002001549050919050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610d5857600080fd5b80915050919050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610dc457600080fd5b610e0b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206113dc565b9050919050565b6060600c8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610eaa5780601f10610e7f57610100808354040283529160200191610eaa565b820191906000526020600020905b815481529060010190602001808311610e8d57829003601f168201915b5050505050905090565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610eef57600080fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b610ffb848484610bee565b611007848484846113ea565b151561101257600080fd5b50505050565b600160009054906101000a900460ff1615151561109d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f416c726561647920696e697469616c697a65640000000000000000000000000081525060200191505060405180910390fd5b60018060006101000a81548160ff02191690831515021790555033600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611125600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16602a61160d565b61118c602a606060405190810160405280602e81526020017f68747470733a2f2f74686973617274776f726b6973616c776179736f6e73616c81526020017f652e636f6d2f6d6574616461746100000000000000000000000000000000000081525061162e565b565b6060611199826112eb565b15156111a457600080fd5b600d60008381526020019081526020016000208054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561124b5780601f106112205761010080835404028352916020019161124b565b820191906000526020600020905b81548152906001019060200180831161122e57829003601f168201915b50505050509050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614905092915050565b6113c383838361166e565b6113cd8382611835565b6113d782826119d9565b505050565b600081600001549050919050565b600061140b8473ffffffffffffffffffffffffffffffffffffffff16611aa0565b151561141a5760019050611605565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156115115780820151818401526020810190506114f6565b50505050905090810190601f16801561153e5780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b15801561156057600080fd5b505af1158015611574573d6000803e3d6000fd5b505050506040513d602081101561158a57600080fd5b8101908080519060200190929190505050905063150b7a027c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b6116178282611ab3565b61162182826119d9565b61162a81611bfd565b5050565b611637826112eb565b151561164257600080fd5b80600d60008481526020019081526020016000209080519060200190611669929190611d64565b505050565b8273ffffffffffffffffffffffffffffffffffffffff1661168e82610ce3565b73ffffffffffffffffffffffffffffffffffffffff161415156116b057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156116ec57600080fd5b6116f581611c49565b61173c600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611d09565b611783600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611d2c565b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b600061188d6001600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050611d4290919063ffffffff16565b90506000600860008481526020019081526020016000205490508181141515611980576000600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811015156118fe57fe5b9060005260206000200154905080600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110151561195857fe5b9060005260206000200181905550816008600083815260200190815260200160002081905550505b600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054809190600190036119d29190611de4565b5050505050565b600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506008600083815260200190815260200160002081905550600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b600080823b905060008111915050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515611aef57600080fd5b611af8816112eb565b151515611b0457600080fd5b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611b9d600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611d2c565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b600980549050600a600083815260200190815260200160002081905550600981908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b600073ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515611d065760006003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b611d2160018260000154611d4290919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b6000828211151515611d5357600080fd5b600082840390508091505092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611da557805160ff1916838001178555611dd3565b82800160010185558215611dd3579182015b82811115611dd2578251825591602001919060010190611db7565b5b509050611de09190611e10565b5090565b815481835581811115611e0b57818360005260206000209182019101611e0a9190611e10565b5b505050565b611e3291905b80821115611e2e576000816000905550600101611e16565b5090565b9056fea165627a7a72305820165532b37869337c227090ed9621d3d810862e1b35e200b4fa1025c500b297ff0029",
  "sourceMap": "404:500:4:-;;;502:5:2;490:17;;;;;;;;;;;;;;;;;;;;475:155:4;8:9:-1;5:2;;;30:1;27;20:12;5:2;475:155:4;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;475:155:4;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;0:372;;475:155:4;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;0:372;;475:155:4;;;;;;552:4;558:6;650:40:1;247:10;669:20;;650:18;;;:40;;;:::i;:::-;2015::2;1272:10;2034:20;;2015:18;;;:40;;;:::i;:::-;1232:51:3;848:10;1251:31;;1232:18;;;:51;;;:::i;:::-;738:4:5;730:5;:12;;;;;;;;;;;;:::i;:::-;;762:6;752:7;:16;;;;;;;;;;;;:::i;:::-;;856:49;421:10;875:29;;856:18;;;:49;;;:::i;:::-;658:254;;475:155:4;;404:500;;1000:158:1;1090:10;1075:25;;:11;:25;;;;;1067:34;;;;;;;;1147:4;1111:20;:33;1132:11;1111:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;1000:158;:::o;404:500:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "404:500:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;788:133:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;788:133:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;788:133:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1016:83:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1016:83:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1016:83:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3818:151:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3818:151:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3818:151:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3241:292;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3241:292:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3241:292:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1997:94:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1997:94:3;;;;;;;;;;;;;;;;;;;;;;;5374:180:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5374:180:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5374:180:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1663:182:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1663:182:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1663:182:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6187:132:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6187:132:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6187:132:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2428:148:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2428:148:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2428:148:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2643:177:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2643:177:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2643:177:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1196:22;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1196:22:2;;;;;;;;;;;;;;;;;;;;;;;;;;;2265:160;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2265:160:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2265:160:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1207:87:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1207:87:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1207:87:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4261:213:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4261:213:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4261:213:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7024:211;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7024:211:2;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;7024:211:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;7024:211:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7024:211:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7024:211:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;7024:211:2;;;;;;;;;;;;;;;;;;636:266:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;636:266:4;;;;;;1493:151:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1493:151:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1493:151:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1493:151:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4795:145:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4795:145:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4795:145:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;788:133:1;858:4;881:20;:33;902:11;881:33;;;;;;;;;;;;;;;;;;;;;;;;;;;874:40;;788:133;;;:::o;1016:83:5:-;1055:13;1087:5;1080:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1016:83;:::o;3818:151:2:-;3877:7;3904:16;3912:7;3904;:16::i;:::-;3896:25;;;;;;;;3938:15;:24;3954:7;3938:24;;;;;;;;;;;;;;;;;;;;;3931:31;;3818:151;;;:::o;3241:292::-;3304:13;3320:16;3328:7;3320;:16::i;:::-;3304:32;;3360:5;3354:11;;:2;:11;;;;3346:20;;;;;;;;3398:5;3384:19;;:10;:19;;;:58;;;;3407:35;3424:5;3431:10;3407:16;:35::i;:::-;3384:58;3376:67;;;;;;;;3481:2;3454:15;:24;3470:7;3454:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;3518:7;3514:2;3498:28;;3507:5;3498:28;;;;;;;;;;;;3241:292;;;:::o;1997:94:3:-;2041:7;2067:10;:17;;;;2060:24;;1997:94;:::o;5374:180:2:-;5464:39;5483:10;5495:7;5464:18;:39::i;:::-;5456:48;;;;;;;;5515:32;5529:4;5535:2;5539:7;5515:13;:32::i;:::-;5374:180;;;:::o;1663:182:3:-;1743:7;1778:16;1788:5;1778:9;:16::i;:::-;1770:5;:24;1762:33;;;;;;;;1812:12;:19;1825:5;1812:19;;;;;;;;;;;;;;;1832:5;1812:26;;;;;;;;;;;;;;;;;;1805:33;;1663:182;;;;:::o;6187:132:2:-;6273:39;6290:4;6296:2;6300:7;6273:39;;;;;;;;;;;;;:16;:39::i;:::-;6187:132;;;:::o;2428:148:3:-;2486:7;2521:13;:11;:13::i;:::-;2513:5;:21;2505:30;;;;;;;;2552:10;2563:5;2552:17;;;;;;;;;;;;;;;;;;2545:24;;2428:148;;;:::o;2643:177:2:-;2698:7;2717:13;2733:11;:20;2745:7;2733:20;;;;;;;;;;;;;;;;;;;;;2717:36;;2788:1;2771:19;;:5;:19;;;;2763:28;;;;;;;;2808:5;2801:12;;;2643:177;;;:::o;1196:22::-;;;;;;;;;;;;;:::o;2265:160::-;2320:7;2364:1;2347:19;;:5;:19;;;;2339:28;;;;;;;;2384:34;:17;:24;2402:5;2384:24;;;;;;;;;;;;;;;:32;:34::i;:::-;2377:41;;2265:160;;;:::o;1207:87:5:-;1248:13;1280:7;1273:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1207:87;:::o;4261:213:2:-;4346:10;4340:16;;:2;:16;;;;4332:25;;;;;;;;4404:8;4367:18;:30;4386:10;4367:30;;;;;;;;;;;;;;;:34;4398:2;4367:34;;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;4454:2;4427:40;;4442:10;4427:40;;;4458:8;4427:40;;;;;;;;;;;;;;;;;;;;;;4261:213;;:::o;7024:211::-;7130:31;7143:4;7149:2;7153:7;7130:12;:31::i;:::-;7179:48;7202:4;7208:2;7212:7;7221:5;7179:22;:48::i;:::-;7171:57;;;;;;;;7024:211;;;;:::o;636:266:4:-;679:4;;;;;;;;;;;678:5;670:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;724:4;717;;:11;;;;;;;;;;;;;;;;;;749:10;739:7;;:20;;;;;;;;;;;;;;;;;;793:18;799:7;;;;;;;;;;;808:2;793:5;:18::i;:::-;829:66;842:2;829:66;;;;;;;;;;;;;;;;;;;;;;;:12;:66::i;:::-;636:266::o;1493:151:5:-;1551:13;1584:16;1592:7;1584;:16::i;:::-;1576:25;;;;;;;;1618:10;:19;1629:7;1618:19;;;;;;;;;;;1611:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1493:151;;;:::o;4795:145:2:-;4875:4;4898:18;:25;4917:5;4898:25;;;;;;;;;;;;;;;:35;4924:8;4898:35;;;;;;;;;;;;;;;;;;;;;;;;;4891:42;;4795:145;;;;:::o;7429:152::-;7486:4;7502:13;7518:11;:20;7530:7;7518:20;;;;;;;;;;;;;;;;;;;;;7502:36;;7572:1;7555:19;;:5;:19;;;;7548:26;;;7429:152;;;:::o;7941:363::-;8026:4;8288:7;;;;;;;;;;;8277:18;;:7;:18;;;8269:27;;7941:363;;;;:::o;2951:239:3:-;3036:38;3056:4;3062:2;3066:7;3036:19;:38::i;:::-;3085:47;3118:4;3124:7;3085:32;:47::i;:::-;3143:40;3171:2;3175:7;3143:27;:40::i;:::-;2951:239;;;:::o;1054:112:14:-;1119:7;1145;:14;;;1138:21;;1054:112;;;:::o;10896:347:2:-;11017:4;11042:15;:2;:13;;;:15::i;:::-;11041:16;11037:58;;;11080:4;11073:11;;;;11037:58;11105:13;11137:2;11121:36;;;11158:10;11170:4;11176:7;11185:5;11121:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11121:70:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11121:70:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11121:70:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11121:70:2;;;;;;;;;;;;;;;;11105:86;;729:10;11219:16;;11209:26;;;:6;:26;;;;11201:35;;;10896:347;;;;;;;:::o;3445:196:3:-;3508:24;3520:2;3524:7;3508:11;:24::i;:::-;3543:40;3571:2;3575:7;3543:27;:40::i;:::-;3594;3626:7;3594:31;:40::i;:::-;3445:196;;:::o;1881:144:5:-;1966:16;1974:7;1966;:16::i;:::-;1958:25;;;;;;;;2015:3;1993:10;:19;2004:7;1993:19;;;;;;;;;;;:25;;;;;;;;;;;;:::i;:::-;;1881:144;;:::o;10006:362:2:-;10119:4;10099:24;;:16;10107:7;10099;:16::i;:::-;:24;;;10091:33;;;;;;;;10156:1;10142:16;;:2;:16;;;;10134:25;;;;;;;;10170:23;10185:7;10170:14;:23::i;:::-;10204:35;:17;:23;10222:4;10204:23;;;;;;;;;;;;;;;:33;:35::i;:::-;10249:33;:17;:21;10267:2;10249:21;;;;;;;;;;;;;;;:31;:33::i;:::-;10316:2;10293:11;:20;10305:7;10293:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;10353:7;10349:2;10334:27;;10343:4;10334:27;;;;;;;;;;;;10006:362;;;:::o;6053:1128:3:-;6315:22;6340:32;6370:1;6340:12;:18;6353:4;6340:18;;;;;;;;;;;;;;;:25;;;;:29;;:32;;;;:::i;:::-;6315:57;;6382:18;6403:17;:26;6421:7;6403:26;;;;;;;;;;;;6382:47;;6547:14;6533:10;:28;;6529:323;;;6577:19;6599:12;:18;6612:4;6599:18;;;;;;;;;;;;;;;6618:14;6599:34;;;;;;;;;;;;;;;;;;6577:56;;6681:11;6648:12;:18;6661:4;6648:18;;;;;;;;;;;;;;;6667:10;6648:30;;;;;;;;;;;;;;;;;:44;;;;6797:10;6764:17;:30;6782:11;6764:30;;;;;;;;;;;:43;;;;6529:323;;6938:12;:18;6951:4;6938:18;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;6053:1128;;;;:::o;4899:183::-;5012:12;:16;5025:2;5012:16;;;;;;;;;;;;;;;:23;;;;4983:17;:26;5001:7;4983:26;;;;;;;;;;;:52;;;;5045:12;:16;5058:2;5045:16;;;;;;;;;;;;;;;5067:7;5045:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;5045:30:3;;;;;;;;;;;;;;;;;;;;;;4899:183;;:::o;463:616:13:-;523:4;539:12;1038:7;1026:20;1018:28;;1071:1;1064:4;:8;1057:15;;;463:616;;;:::o;8547:259:2:-;8632:1;8618:16;;:2;:16;;;;8610:25;;;;;;;;8654:16;8662:7;8654;:16::i;:::-;8653:17;8645:26;;;;;;;;8705:2;8682:11;:20;8694:7;8682:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;8717:33;:17;:21;8735:2;8717:21;;;;;;;;;;;;;;;:31;:33::i;:::-;8791:7;8787:2;8766:33;;8783:1;8766:33;;;;;;;;;;;;8547:259;;:::o;5277:161:3:-;5380:10;:17;;;;5353:15;:24;5369:7;5353:24;;;;;;;;;;;:44;;;;5407:10;5423:7;5407:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;5407:24:3;;;;;;;;;;;;;;;;;;;;;;5277:161;:::o;11404:171:2:-;11503:1;11467:38;;:15;:24;11483:7;11467:24;;;;;;;;;;;;;;;;;;;;;:38;;;;11463:106;;;11556:1;11521:15;:24;11537:7;11521:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;11463:106;11404:171;:::o;1267:108:14:-;1347:21;1366:1;1347:7;:14;;;:18;;:21;;;;:::i;:::-;1330:7;:14;;:38;;;;1267:108;:::o;1172:89::-;1253:1;1235:7;:14;;;:19;;;;;;;;;;;1172:89;:::o;1211:145:15:-;1269:7;1301:1;1296;:6;;1288:15;;;;;;;;1313:9;1329:1;1325;:5;1313:17;;1348:1;1341:8;;;1211:145;;;;:::o;404:500:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"./ERC721.sol\";\nimport \"./ERC721Enumerable.sol\";\nimport \"./ERC721Metadata.sol\";\n\n/**\n * @title Full ERC721 Token\n * This implementation includes all the required and some optional functionality of the ERC721 standard\n * Moreover, it includes approve all functionality using operator terminology\n * @dev see https://github.com/ethereum/EIPs/blob/master/EIPS/eip-721.md\n */\ncontract ERC721Full is ERC721, ERC721Enumerable, ERC721Metadata {\n\n    constructor (string memory name, string memory symbol) public ERC721Metadata(name, symbol) {\n        // solhint-disable-previous-line no-empty-blocks\n    }\n\n    function setup() public {\n        require(!init, \"Already initialized\");\n        init = true;\n\n        steward = msg.sender;\n        // mint artwork\n        _mint(steward, 42); // mint\n        _setTokenURI(42, \"https://thisartworkisalwaysonsale.com/metadata\");\n    }\n}",
  "sourcePath": "/Users/simondlr/code/ethereum/alwayson2/contracts/ERC721Full.sol",
  "ast": {
    "absolutePath": "/Users/simondlr/code/ethereum/alwayson2/contracts/ERC721Full.sol",
    "exportedSymbols": {
      "ERC721Full": [
        1600
      ]
    },
    "id": 1601,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1549,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:4"
      },
      {
        "absolutePath": "/Users/simondlr/code/ethereum/alwayson2/contracts/ERC721.sol",
        "file": "./ERC721.sol",
        "id": 1550,
        "nodeType": "ImportDirective",
        "scope": 1601,
        "sourceUnit": 1213,
        "src": "25:22:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/simondlr/code/ethereum/alwayson2/contracts/ERC721Enumerable.sol",
        "file": "./ERC721Enumerable.sol",
        "id": 1551,
        "nodeType": "ImportDirective",
        "scope": 1601,
        "sourceUnit": 1548,
        "src": "48:32:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/simondlr/code/ethereum/alwayson2/contracts/ERC721Metadata.sol",
        "file": "./ERC721Metadata.sol",
        "id": 1552,
        "nodeType": "ImportDirective",
        "scope": 1601,
        "sourceUnit": 1728,
        "src": "81:30:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1553,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1212,
              "src": "427:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$1212",
                "typeString": "contract ERC721"
              }
            },
            "id": 1554,
            "nodeType": "InheritanceSpecifier",
            "src": "427:6:4"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1555,
              "name": "ERC721Enumerable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1547,
              "src": "435:16:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Enumerable_$1547",
                "typeString": "contract ERC721Enumerable"
              }
            },
            "id": 1556,
            "nodeType": "InheritanceSpecifier",
            "src": "435:16:4"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1557,
              "name": "ERC721Metadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1727,
              "src": "453:14:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Metadata_$1727",
                "typeString": "contract ERC721Metadata"
              }
            },
            "id": 1558,
            "nodeType": "InheritanceSpecifier",
            "src": "453:14:4"
          }
        ],
        "contractDependencies": [
          679,
          1212,
          1547,
          1727,
          1794,
          1900,
          1927,
          1962
        ],
        "contractKind": "contract",
        "documentation": "@title Full ERC721 Token\nThis implementation includes all the required and some optional functionality of the ERC721 standard\nMoreover, it includes approve all functionality using operator terminology\n@dev see https://github.com/ethereum/EIPs/blob/master/EIPS/eip-721.md",
        "fullyImplemented": true,
        "id": 1600,
        "linearizedBaseContracts": [
          1600,
          1727,
          1962,
          1547,
          1927,
          1212,
          1900,
          679,
          1794
        ],
        "name": "ERC721Full",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1569,
              "nodeType": "Block",
              "src": "566:64:4",
              "statements": []
            },
            "documentation": null,
            "id": 1570,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1565,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1560,
                    "src": "552:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1566,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1562,
                    "src": "558:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 1567,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1564,
                  "name": "ERC721Metadata",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1727,
                  "src": "537:14:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Metadata_$1727_$",
                    "typeString": "type(contract ERC721Metadata)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "537:28:4"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1563,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1560,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 1570,
                  "src": "488:18:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1559,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "488:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1562,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 1570,
                  "src": "508:20:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1561,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "508:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "487:42:4"
            },
            "returnParameters": {
              "id": 1568,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "566:0:4"
            },
            "scope": 1600,
            "src": "475:155:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1598,
              "nodeType": "Block",
              "src": "660:242:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1575,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "678:5:4",
                        "subExpression": {
                          "argumentTypes": null,
                          "id": 1574,
                          "name": "init",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 703,
                          "src": "679:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "416c726561647920696e697469616c697a6564",
                        "id": 1576,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "685:21:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0",
                          "typeString": "literal_string \"Already initialized\""
                        },
                        "value": "Already initialized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0",
                          "typeString": "literal_string \"Already initialized\""
                        }
                      ],
                      "id": 1573,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2192,
                        2193
                      ],
                      "referencedDeclaration": 2193,
                      "src": "670:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1577,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "670:37:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1578,
                  "nodeType": "ExpressionStatement",
                  "src": "670:37:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1579,
                      "name": "init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 703,
                      "src": "717:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 1580,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "724:4:4",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "717:11:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1582,
                  "nodeType": "ExpressionStatement",
                  "src": "717:11:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1583,
                      "name": "steward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 726,
                      "src": "739:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1584,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2189,
                        "src": "749:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1585,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "749:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "739:20:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1587,
                  "nodeType": "ExpressionStatement",
                  "src": "739:20:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1589,
                        "name": "steward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 726,
                        "src": "799:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "3432",
                        "id": 1590,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "808:2:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_42_by_1",
                          "typeString": "int_const 42"
                        },
                        "value": "42"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_42_by_1",
                          "typeString": "int_const 42"
                        }
                      ],
                      "id": 1588,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1354
                      ],
                      "referencedDeclaration": 1354,
                      "src": "793:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1591,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "793:18:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1592,
                  "nodeType": "ExpressionStatement",
                  "src": "793:18:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "3432",
                        "id": 1594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "842:2:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_42_by_1",
                          "typeString": "int_const 42"
                        },
                        "value": "42"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "68747470733a2f2f74686973617274776f726b6973616c776179736f6e73616c652e636f6d2f6d65746164617461",
                        "id": 1595,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "846:48:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e5c7d270b8613bd448ae4a6674d1a533bb07d72a913619b38283890de074e4a8",
                          "typeString": "literal_string \"https://thisartworkisalwaysonsale.com/metadata\""
                        },
                        "value": "https://thisartworkisalwaysonsale.com/metadata"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_42_by_1",
                          "typeString": "int_const 42"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e5c7d270b8613bd448ae4a6674d1a533bb07d72a913619b38283890de074e4a8",
                          "typeString": "literal_string \"https://thisartworkisalwaysonsale.com/metadata\""
                        }
                      ],
                      "id": 1593,
                      "name": "_setTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1696,
                      "src": "829:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 1596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "829:66:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1597,
                  "nodeType": "ExpressionStatement",
                  "src": "829:66:4"
                }
              ]
            },
            "documentation": null,
            "id": 1599,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setup",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1571,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "650:2:4"
            },
            "returnParameters": {
              "id": 1572,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "660:0:4"
            },
            "scope": 1600,
            "src": "636:266:4",
            "stateMutability": "nonpayable",
            "superFunction": 1826,
            "visibility": "public"
          }
        ],
        "scope": 1601,
        "src": "404:500:4"
      }
    ],
    "src": "0:904:4"
  },
  "legacyAST": {
    "absolutePath": "/Users/simondlr/code/ethereum/alwayson2/contracts/ERC721Full.sol",
    "exportedSymbols": {
      "ERC721Full": [
        1600
      ]
    },
    "id": 1601,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1549,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:4"
      },
      {
        "absolutePath": "/Users/simondlr/code/ethereum/alwayson2/contracts/ERC721.sol",
        "file": "./ERC721.sol",
        "id": 1550,
        "nodeType": "ImportDirective",
        "scope": 1601,
        "sourceUnit": 1213,
        "src": "25:22:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/simondlr/code/ethereum/alwayson2/contracts/ERC721Enumerable.sol",
        "file": "./ERC721Enumerable.sol",
        "id": 1551,
        "nodeType": "ImportDirective",
        "scope": 1601,
        "sourceUnit": 1548,
        "src": "48:32:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/simondlr/code/ethereum/alwayson2/contracts/ERC721Metadata.sol",
        "file": "./ERC721Metadata.sol",
        "id": 1552,
        "nodeType": "ImportDirective",
        "scope": 1601,
        "sourceUnit": 1728,
        "src": "81:30:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1553,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1212,
              "src": "427:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$1212",
                "typeString": "contract ERC721"
              }
            },
            "id": 1554,
            "nodeType": "InheritanceSpecifier",
            "src": "427:6:4"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1555,
              "name": "ERC721Enumerable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1547,
              "src": "435:16:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Enumerable_$1547",
                "typeString": "contract ERC721Enumerable"
              }
            },
            "id": 1556,
            "nodeType": "InheritanceSpecifier",
            "src": "435:16:4"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1557,
              "name": "ERC721Metadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1727,
              "src": "453:14:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Metadata_$1727",
                "typeString": "contract ERC721Metadata"
              }
            },
            "id": 1558,
            "nodeType": "InheritanceSpecifier",
            "src": "453:14:4"
          }
        ],
        "contractDependencies": [
          679,
          1212,
          1547,
          1727,
          1794,
          1900,
          1927,
          1962
        ],
        "contractKind": "contract",
        "documentation": "@title Full ERC721 Token\nThis implementation includes all the required and some optional functionality of the ERC721 standard\nMoreover, it includes approve all functionality using operator terminology\n@dev see https://github.com/ethereum/EIPs/blob/master/EIPS/eip-721.md",
        "fullyImplemented": true,
        "id": 1600,
        "linearizedBaseContracts": [
          1600,
          1727,
          1962,
          1547,
          1927,
          1212,
          1900,
          679,
          1794
        ],
        "name": "ERC721Full",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1569,
              "nodeType": "Block",
              "src": "566:64:4",
              "statements": []
            },
            "documentation": null,
            "id": 1570,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1565,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1560,
                    "src": "552:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1566,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1562,
                    "src": "558:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 1567,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1564,
                  "name": "ERC721Metadata",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1727,
                  "src": "537:14:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Metadata_$1727_$",
                    "typeString": "type(contract ERC721Metadata)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "537:28:4"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1563,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1560,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 1570,
                  "src": "488:18:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1559,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "488:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1562,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 1570,
                  "src": "508:20:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1561,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "508:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "487:42:4"
            },
            "returnParameters": {
              "id": 1568,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "566:0:4"
            },
            "scope": 1600,
            "src": "475:155:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1598,
              "nodeType": "Block",
              "src": "660:242:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1575,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "678:5:4",
                        "subExpression": {
                          "argumentTypes": null,
                          "id": 1574,
                          "name": "init",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 703,
                          "src": "679:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "416c726561647920696e697469616c697a6564",
                        "id": 1576,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "685:21:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0",
                          "typeString": "literal_string \"Already initialized\""
                        },
                        "value": "Already initialized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0",
                          "typeString": "literal_string \"Already initialized\""
                        }
                      ],
                      "id": 1573,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2192,
                        2193
                      ],
                      "referencedDeclaration": 2193,
                      "src": "670:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1577,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "670:37:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1578,
                  "nodeType": "ExpressionStatement",
                  "src": "670:37:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1579,
                      "name": "init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 703,
                      "src": "717:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 1580,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "724:4:4",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "717:11:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1582,
                  "nodeType": "ExpressionStatement",
                  "src": "717:11:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1583,
                      "name": "steward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 726,
                      "src": "739:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1584,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2189,
                        "src": "749:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1585,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "749:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "739:20:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1587,
                  "nodeType": "ExpressionStatement",
                  "src": "739:20:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1589,
                        "name": "steward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 726,
                        "src": "799:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "3432",
                        "id": 1590,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "808:2:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_42_by_1",
                          "typeString": "int_const 42"
                        },
                        "value": "42"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_42_by_1",
                          "typeString": "int_const 42"
                        }
                      ],
                      "id": 1588,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1354
                      ],
                      "referencedDeclaration": 1354,
                      "src": "793:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1591,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "793:18:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1592,
                  "nodeType": "ExpressionStatement",
                  "src": "793:18:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "3432",
                        "id": 1594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "842:2:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_42_by_1",
                          "typeString": "int_const 42"
                        },
                        "value": "42"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "68747470733a2f2f74686973617274776f726b6973616c776179736f6e73616c652e636f6d2f6d65746164617461",
                        "id": 1595,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "846:48:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e5c7d270b8613bd448ae4a6674d1a533bb07d72a913619b38283890de074e4a8",
                          "typeString": "literal_string \"https://thisartworkisalwaysonsale.com/metadata\""
                        },
                        "value": "https://thisartworkisalwaysonsale.com/metadata"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_42_by_1",
                          "typeString": "int_const 42"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e5c7d270b8613bd448ae4a6674d1a533bb07d72a913619b38283890de074e4a8",
                          "typeString": "literal_string \"https://thisartworkisalwaysonsale.com/metadata\""
                        }
                      ],
                      "id": 1593,
                      "name": "_setTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1696,
                      "src": "829:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 1596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "829:66:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1597,
                  "nodeType": "ExpressionStatement",
                  "src": "829:66:4"
                }
              ]
            },
            "documentation": null,
            "id": 1599,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setup",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1571,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "650:2:4"
            },
            "returnParameters": {
              "id": 1572,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "660:0:4"
            },
            "scope": 1600,
            "src": "636:266:4",
            "stateMutability": "nonpayable",
            "superFunction": 1826,
            "visibility": "public"
          }
        ],
        "scope": 1601,
        "src": "404:500:4"
      }
    ],
    "src": "0:904:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {
    "1": {
      "events": {},
      "links": {},
      "address": "0x6d7C26F2E77d0cCc200464C8b2040c0B840b28a2",
      "transactionHash": "0x33f916621ac2dbd83e69527ae92b0768c2396334373ab9062759ec4c0ddbce59"
    },
    "4": {
      "events": {},
      "links": {},
      "address": "0x8bdD3E679B798C9d58B21eF3b6555a8737D538A5",
      "transactionHash": "0x1d0c5701327185ed0b757caa92516eba4919677c07dc30dd962550c067c82861"
    },
    "1552044327506": {
      "events": {},
      "links": {},
      "address": "0x3fEcb542613132899B63eac69818740101ccA247",
      "transactionHash": "0xce3390a388078bebeaf67ef8e7c89613d0d481faecdf1d8c371095195f5e68ed"
    },
    "1552044933236": {
      "events": {},
      "links": {},
      "address": "0xe03D07e0fbe557C4df22Df3D3C0D70dfacF7A60E",
      "transactionHash": "0x503edd89474c83e7a2902802633eb9b4bddaf345c49fb79f08a3aa06a846946f"
    },
    "1552135051190": {
      "events": {},
      "links": {},
      "address": "0xe5560289be2a80826ea72dB95e0b14379A7C4d3E",
      "transactionHash": "0x1ff418dc8e67e4690f611c2bbbfe9ff7406aa1efa79f7d84656dca2ea5eb3110"
    },
    "1552142359518": {
      "events": {},
      "links": {},
      "address": "0xe5560289be2a80826ea72dB95e0b14379A7C4d3E",
      "transactionHash": "0x1ff418dc8e67e4690f611c2bbbfe9ff7406aa1efa79f7d84656dca2ea5eb3110"
    },
    "1552382399217": {
      "events": {},
      "links": {},
      "address": "0xe5560289be2a80826ea72dB95e0b14379A7C4d3E",
      "transactionHash": "0x1ff418dc8e67e4690f611c2bbbfe9ff7406aa1efa79f7d84656dca2ea5eb3110"
    },
    "1552644514489": {
      "events": {},
      "links": {},
      "address": "0xe5560289be2a80826ea72dB95e0b14379A7C4d3E",
      "transactionHash": "0x3f4b6af3f9e60d1b0e6b502cf0d186564051b47146e8b9b193d43f671059df4d"
    },
    "1552650039273": {
      "events": {},
      "links": {},
      "address": "0xe5560289be2a80826ea72dB95e0b14379A7C4d3E",
      "transactionHash": "0x3f4b6af3f9e60d1b0e6b502cf0d186564051b47146e8b9b193d43f671059df4d"
    },
    "1552650524401": {
      "events": {},
      "links": {},
      "address": "0xe5560289be2a80826ea72dB95e0b14379A7C4d3E",
      "transactionHash": "0x3f4b6af3f9e60d1b0e6b502cf0d186564051b47146e8b9b193d43f671059df4d"
    },
    "1552650639626": {
      "events": {},
      "links": {},
      "address": "0xe5560289be2a80826ea72dB95e0b14379A7C4d3E",
      "transactionHash": "0x3f4b6af3f9e60d1b0e6b502cf0d186564051b47146e8b9b193d43f671059df4d"
    },
    "1552924211403": {
      "events": {},
      "links": {},
      "address": "0xe5560289be2a80826ea72dB95e0b14379A7C4d3E",
      "transactionHash": "0xcb6cfe8985755b039081bb7b4f388220faa9e835805fadf2c0361f976ac79c9b"
    },
    "1554210298321": {
      "events": {},
      "links": {},
      "address": "0xe5560289be2a80826ea72dB95e0b14379A7C4d3E",
      "transactionHash": "0xadb85f9d3accdcdb26193c0f6bd53dd270921910c7cbbeee131767f9825e1b95"
    }
  },
  "schemaVersion": "3.0.2",
  "updatedAt": "2019-04-02T13:07:50.427Z",
  "devdoc": {
    "details": "see https://github.com/ethereum/EIPs/blob/master/EIPS/eip-721.md",
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address",
        "params": {
          "owner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "name()": {
        "details": "Gets the token name",
        "return": "string representing the token name"
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "address currently marked as the owner of the given token ID"
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "implement supportsInterface(bytes4) using a lookup table"
      },
      "symbol()": {
        "details": "Gets the token symbol",
        "return": "string representing the token symbol"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "tokenURI(uint256)": {
        "details": "Returns an URI for a given token ID Throws if the token ID does not exist. May return an empty string.",
        "params": {
          "tokenId": "uint256 ID of the token to query"
        }
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract",
        "return": "uint256 representing the total amount of tokens"
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address Usage of this method is discouraged, use `safeTransferFrom` whenever possible Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      }
    },
    "title": "Full ERC721 Token This implementation includes all the required and some optional functionality of the ERC721 standard Moreover, it includes approve all functionality using operator terminology"
  },
  "userdoc": {
    "methods": {}
  }
}